<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Wade Deng's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-10-28T02:25:30.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Wade Deng]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[使用webstorm 配置文件配置mocha]]></title>
    <link href="http://yoursite.com/2015/10/28/webstorm_mocha/"/>
    <id>http://yoursite.com/2015/10/28/webstorm_mocha/</id>
    <published>2015-10-28T02:25:30.000Z</published>
    <updated>2015-10-28T02:25:30.000Z</updated>
    <content type="html"><![CDATA[<p>Webstorm 的运行配置文件。<br>Mocha_Coverage.xml  使用 Mocha 运行测试。</p>
<pre><code><span class="tag">&lt;<span class="title">component</span> <span class="attribute">name</span>=<span class="value">"ProjectRunConfigurationManager"</span>&gt;</span>
  <span class="tag">&lt;<span class="title">configuration</span> <span class="attribute">default</span>=<span class="value">"false"</span> <span class="attribute">name</span>=<span class="value">"Mocha Coverage"</span> <span class="attribute">type</span>=<span class="value">"mocha-javascript-test-runner"</span> <span class="attribute">factoryName</span>=<span class="value">"Mocha"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">node-options</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">working-directory</span>&gt;</span>$PROJECT_DIR$<span class="tag">&lt;/<span class="title">working-directory</span>&gt;</span>
    <span class="tag">&lt;<span class="title">pass-parent-env</span>&gt;</span>true<span class="tag">&lt;/<span class="title">pass-parent-env</span>&gt;</span>
    <span class="tag">&lt;<span class="title">envs</span>&gt;</span>
      <span class="tag">&lt;<span class="title">env</span> <span class="attribute">name</span>=<span class="value">"REDIS_HOST"</span> <span class="attribute">value</span>=<span class="value">"koala"</span> /&gt;</span>
      <span class="tag">&lt;<span class="title">env</span> <span class="attribute">name</span>=<span class="value">"PORT"</span> <span class="attribute">value</span>=<span class="value">"8012"</span> /&gt;</span>
      <span class="tag">&lt;<span class="title">env</span> <span class="attribute">name</span>=<span class="value">"TOKEN_SECRET"</span> <span class="attribute">value</span>=<span class="value">"koala"</span> /&gt;</span>
      <span class="tag">&lt;<span class="title">env</span> <span class="attribute">name</span>=<span class="value">"RUN_UNITTEST"</span> <span class="attribute">value</span>=<span class="value">"TEST"</span> /&gt;</span>
      <span class="tag">&lt;<span class="title">env</span> <span class="attribute">name</span>=<span class="value">""</span> <span class="attribute">value</span>=<span class="value">""</span> /&gt;</span>
    <span class="tag">&lt;/<span class="title">envs</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ui</span>&gt;</span>bdd<span class="tag">&lt;/<span class="title">ui</span>&gt;</span>
    <span class="tag">&lt;<span class="title">extra-mocha-options</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">test-directory</span>&gt;</span>$PROJECT_DIR$/test/<span class="tag">&lt;/<span class="title">test-directory</span>&gt;</span>
    <span class="tag">&lt;<span class="title">recursive</span>&gt;</span>true<span class="tag">&lt;/<span class="title">recursive</span>&gt;</span>
    <span class="tag">&lt;<span class="title">method</span> /&gt;</span>
  <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span>
<span class="tag">&lt;/<span class="title">component</span>&gt;</span>
</code></pre><p>config.sh</p>
<pre><code><span class="shebang">#!/bin/bash</span>
<span class="built_in">echo</span> <span class="string">'mkdir $PROJECT_DIR$/.idea/runConfigurations'</span>
mkdir -p ../../.idea/runConfigurations

<span class="built_in">echo</span> <span class="string">'copy files to  $PROJECT_DIR$/.idea/runConfigurations'</span>
cp Mocha_Coverage.xml ../../.idea/runConfigurations/
</code></pre><p><img src="http://7xk67t.com1.z0.glb.clouddn.com/configMocha.png" alt="webstrom config 效果图"></p>
<p><img src="http://7xk67t.com1.z0.glb.clouddn.com/mocha.png" alt="运行效果图"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Webstorm 的运行配置文件。<br>Mocha_Coverage.xml  使用 Mocha 运行测试。</p>
<pre><code><span class="tag">&lt;<span class="title">component</span> <span c]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[mongodb-notice]]></title>
    <link href="http://yoursite.com/2015/10/27/mongodb-notice/"/>
    <id>http://yoursite.com/2015/10/27/mongodb-notice/</id>
    <published>2015-10-27T15:13:23.000Z</published>
    <updated>2015-10-27T15:13:33.000Z</updated>
    <content type="html"><![CDATA[<h2 id="使用mongodb注意事项">使用mongodb注意事项</h2><ul>
<li>mongodb 会lock db</li>
<li>multi write: 注意速度，一般而言，以下是速度正常参考值：<ul>
<li>query 0-10 ms  </li>
<li>write 0-100ms</li>
</ul>
</li>
<li>transaction : <ul>
<li>two phase commit （官方推荐，－－ <strong>没回滚，然并卵</strong>）; </li>
<li>mongoose-transaction</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="使用mongodb注意事项">使用mongodb注意事项</h2><ul>
<li>mongodb 会lock db</li>
<li>multi write: 注意速度，一般而言，以下是速度正常参考值：<ul>
<li>query 0-10 ms  </li>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[testing]]></title>
    <link href="http://yoursite.com/2015/10/27/testing/"/>
    <id>http://yoursite.com/2015/10/27/testing/</id>
    <published>2015-10-27T15:12:09.000Z</published>
    <updated>2015-10-28T02:23:10.000Z</updated>
    <content type="html"><![CDATA[<p>Testing </p>
<ul>
<li>makefile, – make coverage，</li>
<li>grunt</li>
<li>mocha</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>Testing </p>
<ul>
<li>makefile, – make coverage，</li>
<li>grunt</li>
<li>mocha</li>
</ul>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[callbackhell]]></title>
    <link href="http://yoursite.com/2015/10/27/callbackhell/"/>
    <id>http://yoursite.com/2015/10/27/callbackhell/</id>
    <published>2015-10-27T15:10:51.000Z</published>
    <updated>2015-10-27T15:11:38.000Z</updated>
    <content type="html"><![CDATA[<h2 id="使用_callback_注意事项">使用 callback 注意事项</h2><p>callback hell 解决：</p>
<ul>
<li>q, bluebird , </li>
<li>async, thenjs </li>
<li>eventproxy </li>
<li>promise, thunk</li>
</ul>
<hr>
<h2 id="使用_async_解决_callback_，写法上注意事项">使用 async 解决 callback ，写法上注意事项</h2><ul>
<li>long Procedure in async.waterfall</li>
<li><p>use event:</p>
<p> event_util.emit(“cashflow_over_quota”, ‘create’, JSON.stringify(cashflow));</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="使用_callback_注意事项">使用 callback 注意事项</h2><p>callback hell 解决：</p>
<ul>
<li>q, bluebird , </li>
<li>async, thenjs </li>
<li>eventproxy ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs-array]]></title>
    <link href="http://yoursite.com/2015/10/27/nodejs-array/"/>
    <id>http://yoursite.com/2015/10/27/nodejs-array/</id>
    <published>2015-10-27T15:10:03.000Z</published>
    <updated>2015-10-27T15:10:39.000Z</updated>
    <content type="html"><![CDATA[<h2 id="使用nodejs_数组坑">使用nodejs 数组坑</h2><p>async 大数组（&gt;5000）, 会报堆栈溢出 Max stack size。<br>解决：</p>
<ul>
<li>setImmediate,</li>
<li>–stack-size=32000 , 启动传此参数</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="使用nodejs_数组坑">使用nodejs 数组坑</h2><p>async 大数组（&gt;5000）, 会报堆栈溢出 Max stack size。<br>解决：</p>
<ul>
<li>setImmediate,</li>
<li>–stack-size]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[sails.js-learning]]></title>
    <link href="http://yoursite.com/2015/10/27/sails-js-learning/"/>
    <id>http://yoursite.com/2015/10/27/sails-js-learning/</id>
    <published>2015-10-27T15:07:15.000Z</published>
    <updated>2015-10-27T15:13:48.000Z</updated>
    <content type="html"><![CDATA[<p>目的：加快开发速度，总结使用方法：<br>menu list:</p>
<ul>
<li>custom controller </li>
<li>custom 模块使用 </li>
<li>custom model </li>
<li>custom middleware  </li>
<li>custom</li>
<li>service</li>
</ul>
<h2 id="关于启动_##：">关于启动 ##：</h2><hr>
<p>config/connection – db connection<br>入口: app.js<br>config/bootstrap - 启动入口app.js 后的<br>config/policies 配置<br>bin/*.json</p>
<h2 id="关于DIY_##：">关于DIY ##：</h2><hr>
<p>config/router<br>路由与对应的controller处理:<br>用命令行 &amp; controller 变化<br>wade-mac:fin_server_invest mac$ sails generate controller mail sendmaillog<br>info: Created a new controller (“mail”) at api/controllers/MailController.js!<br>路由总汇总：config/routes.js<br>    想往常一样加：, ‘GET /make/a/mail’:”MailController.sendmaillog”</p>
<p>模块的使用： －－  与以前一样</p>
<pre><code> /<span class="keyword">*</span><span class="keyword">*</span>
 <span class="keyword">*</span> MailController
 <span class="keyword">*</span>
 <span class="keyword">*</span> <span class="comment">@description :: Server-side logic for managing mails</span>
 <span class="keyword">*</span> <span class="comment">@help        :: See http://links.sailsjs.org/docs/controllers</span>
 <span class="keyword">*</span>/

module.exports = {



  /<span class="keyword">*</span><span class="keyword">*</span>
   <span class="keyword">*</span> `MailController.sendmaillog()`
   <span class="keyword">*</span>/
  sendmaillog: function (req, res) {
    var log4js = require('log4js');
    var logger = log4js.getLogger();
    logger.debug(<span class="string">"Some debug messages"</span>);

    return res.json({
      todo: 'sendmaillog() is not implemented yet!'
    });
  }
};
</code></pre><p>model command ：<br>    <a href="https://www.digitalocean.com/community/tutorials/how-to-create-an-node-js-app-using-sails-js-on-an-ubuntu-vps" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-create-an-node-js-app-using-sails-js-on-an-ubuntu-vps</a></p>
<pre><code><span class="variable">$sails</span> generate model user name:string email:string password:string
<span class="variable">$sails</span> generate controller user index show edit <span class="keyword">delete</span>
</code></pre><p>middleware：<br><a href="https://gist.github.com/mikermcneil/6255295" target="_blank" rel="external">https://gist.github.com/mikermcneil/6255295</a><br>look at config/http.js</p>
<pre><code>module.exports.http = {

  /<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>
  <span class="keyword">*</span>                                                                           <span class="keyword">*</span>
  <span class="keyword">*</span> Express middleware to use for every Sails request. To add custom          <span class="keyword">*</span>
  <span class="keyword">*</span> middleware to the mix, add a function to the middleware config object and <span class="keyword">*</span>
  <span class="keyword">*</span> add its key to the <span class="string">"order"</span> array. The $custom key is reserved for         <span class="keyword">*</span>
  <span class="keyword">*</span> backwards-compatibility with Sails v0.9.x apps that use the               <span class="keyword">*</span>
  <span class="keyword">*</span> `customMiddleware` config option.                                         <span class="keyword">*</span>
  <span class="keyword">*</span>                                                                           <span class="keyword">*</span>
  <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/

  middleware: {

  /<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>
  <span class="keyword">*</span>                                                                          <span class="keyword">*</span>
  <span class="keyword">*</span> The order in which middleware should be run for HTTP request. (the Sails <span class="keyword">*</span>
  <span class="keyword">*</span> router is invoked by the <span class="string">"router"</span> middleware below.)                     <span class="keyword">*</span>
  <span class="keyword">*</span>                                                                          <span class="keyword">*</span>
  <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/

    order: [
       'startRequestTimer',
       'cookieParser',
       'session',
       'myRequestLogger',
       'bodyParser',
       'handleBodyParserError',
       'compress',
       'methodOverride',
       'poweredBy',
       '$custom',
       'router',
       'www',
       'favicon',
       '404',
       '500'
    ],

  /<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>
  <span class="keyword">*</span>                                                                           <span class="keyword">*</span>
  <span class="keyword">*</span> Example custom middleware; logs each request to the console.              <span class="keyword">*</span>
  <span class="keyword">*</span>                                                                           <span class="keyword">*</span>
  <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/

    myRequestLogger: function (req, res, next) {
         console.log(<span class="string">"Requested :: "</span>, req.method, req.url);
         return next();
    },


  /<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>
  <span class="keyword">*</span>                                                                          <span class="keyword">*</span>
  <span class="keyword">*</span> The body parser that will handle incoming multipart HTTP requests. By    <span class="keyword">*</span>
  <span class="keyword">*</span> default as of v0.10, Sails uses                                          <span class="keyword">*</span>
  <span class="keyword">*</span> [skipper](http://github.com/balderdashy/skipper). See                    <span class="keyword">*</span>
  <span class="keyword">*</span> http://www.senchalabs.org/connect/multipart.html for other options.      <span class="keyword">*</span>
  <span class="keyword">*</span>                                                                          <span class="keyword">*</span>
  <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/

    bodyParser: require('skipper')

  },

  /<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>
  <span class="keyword">*</span>                                                                          <span class="keyword">*</span>
  <span class="keyword">*</span> The number of seconds to cache flat files on disk being served by        <span class="keyword">*</span>
  <span class="keyword">*</span> Express static middleware (by default, these files are in `.tmp/public`) <span class="keyword">*</span>
  <span class="keyword">*</span>                                                                          <span class="keyword">*</span>
  <span class="keyword">*</span> The HTTP static cache is only active in a 'production' environment,      <span class="keyword">*</span>
  <span class="keyword">*</span> since that's the only time Express will cache flat-files.                <span class="keyword">*</span>
  <span class="keyword">*</span>                                                                          <span class="keyword">*</span>
  <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/

  cache: 31557600000
};
</code></pre><p>上面的是所有的路由都经过的middleware<br>疑问：控制某个路由/a  经过middleware: [a, b, c ] , 某个路由/b 经过middleware: [a, c ] </p>
<hr>
<h2 id="一些文件夹">一些文件夹</h2><ul>
<li>service 本项目单独的业务逻辑</li>
<li>lib  存放一些共用的lib </li>
<li>data 存放常用配置、数据</li>
</ul>
<h2 id="CRUD">CRUD</h2><ul>
<li>CRUD – model  </li>
<li>CRUD – 尽量使用 native<ul>
<li>速度快</li>
<li>适合复杂操作</li>
</ul>
</li>
<li>CRUD – 坑<ul>
<li>并发：使用findandmodify &amp; update(upsert) &amp; findorcreate   </li>
</ul>
</li>
</ul>
<pre><code>//findandmodify
<span class="type">Order</span>.native(function (err, collection) {
 collection.findAndModify(query, null, {$<span class="type">set</span>: update_data}, {'new': <span class="literal">false</span>}, function (err, newResult, detail) {

//update  upsert
<span class="type">User_account_cashflow</span>.native(function(err, colletion){
 colletion.update(query, {$<span class="type">set</span>: cashflow },{upsert:<span class="literal">true</span>, multi:<span class="literal">false</span>} , function(err, effectNum, <span class="literal">result</span>){
   callback(err, cashflow, <span class="literal">result</span>.updatedExisting);
 });
});
</code></pre><hr>
]]></content>
    <summary type="html">
    <![CDATA[<p>目的：加快开发速度，总结使用方法：<br>menu list:</p>
<ul>
<li>custom controller </li>
<li>custom 模块使用 </li>
<li>custom model </li>
<li>custom middleware  ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[读写分离后的并发问题]]></title>
    <link href="http://yoursite.com/2015/10/27/replicate_error/"/>
    <id>http://yoursite.com/2015/10/27/replicate_error/</id>
    <published>2015-10-27T05:10:41.000Z</published>
    <updated>2015-10-27T05:10:41.000Z</updated>
    <content type="html"><![CDATA[<p>因为服务器最近压力稍大，想做读写分离，以减少主服务器的压力，将读转移到replicate sets 中。<br>但代码执行时：</p>
<ol>
<li>create order record</li>
<li>find order</li>
</ol>
<p>第二步 找不到。报错。</p>
<p>原因。读写分离后，写 master 后，同步到replicate 需要时间。<br>这时候访问（读）replicate ，会有数据不一致的问题。</p>
<p>&lt;2.6 版本的mongodb ，可以通过getLasterError的mongodb command ， j 选项，来确保数据写道磁盘中。<br>对于2.6 + 以上mongodb;<br>mongodb 有write-concert 选项。我们用的sailsjs 框架，默认也是｛w:1｝。带write concert 。 但值得注意的时，write-concert 时确保数据写道磁盘中。<br>但对一个 复制集的 部署架构，要确保数据也同时同步到复制集中。{w:number},number 要是复制集的数目。<br>1 只代表写到 standalone的 hosts ，或者 复制集架构的的master。</p>
<p>注意：<br>如果对数据一致性要求不高，可以使用读写分离。<br>如果对数据一致性要求高，要慎重开启读写分离，或者配置写操作的option {w:$number}。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>因为服务器最近压力稍大，想做读写分离，以减少主服务器的压力，将读转移到replicate sets 中。<br>但代码执行时：</p>
<ol>
<li>create order record</li>
<li>find order</li>
</ol>
<p>第二步 找不]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[将已有的集合转化为固定集合碰到的问题]]></title>
    <link href="http://yoursite.com/2015/10/27/maintain_mongodb/"/>
    <id>http://yoursite.com/2015/10/27/maintain_mongodb/</id>
    <published>2015-10-27T04:41:29.000Z</published>
    <updated>2015-10-27T04:41:29.000Z</updated>
    <content type="html"><![CDATA[<p>将已有的集合转化为固定集合<br>    db.runCommand({convertToCapped:”test”,size:10000});</p>
<pre><code>//check
db.test.<span class="keyword">state</span>()
//isCap:true
</code></pre><p>转的时候size 是collection的大小，<br>另外创建的时候可以制定，最大的documents size （max 属性）</p>
<pre><code><span class="tag">db</span><span class="class">.createCollection</span>(<span class="string">"collect"</span>,{<span class="attribute">capped</span>:true, <span class="attribute">size</span>:<span class="number">10000</span>, <span class="attribute">max</span>:<span class="number">20</span>});
</code></pre><p>坑：创建后，手动create &gt;20 条纪录时，会出现先进先出的队列效果。</p>
<pre><code>&gt; <span class="tag">db</span><span class="class">.createCollection</span>("<span class="tag">testC</span>",<span class="rules">{<span class="rule"><span class="attribute">capped</span>:<span class="value">true, size:<span class="number">100</span>, max:<span class="number">2</span></span></span></span>});
</code></pre><p>{ “ok” : 1 }</p>
<blockquote>
<p>db.testC.insert({‘name’:’wade’, ‘time’:new Date().toLocaleTimeString()})<br>WriteResult({ “nInserted” : 1 })<br>db.testC.find({})<br>{ “_id” : ObjectId(“55d5fdf2c49e250bbf9e4770”), “name” : “wade”, “time” : “00:18:58” }<br>db.testC.insert({‘name’:’wade’, ‘time’:new Date().toLocaleTimeString()})<br>WriteResult({ “nInserted” : 1 })<br>db.testC.find({})<br>{ “_id” : ObjectId(“55d5fdf2c49e250bbf9e4770”), “name” : “wade”, “time” : “00:18:58” }<br>{ “_id” : ObjectId(“55d5fe02c49e250bbf9e4771”), “name” : “wade”, “time” : “00:19:14” }<br>db.testC.insert({‘name’:’wade’, ‘time’:new Date().toLocaleTimeString()})<br>WriteResult({ “nInserted” : 1 })<br>db.testC.find({})<br>{ “_id” : ObjectId(“55d5fe02c49e250bbf9e4771”), “name” : “wade”, “time” : “00:19:14” }<br>{ “_id” : ObjectId(“55d5fe08c49e250bbf9e4772”), “name” : “wade”, “time” : “00:19:20” }</p>
</blockquote>
<hr>
<p>offline simulating</p>
<pre><code>&gt; db.article.find({}).count()
<span class="number">6</span>
&gt; db.runCommand({convertToCapped:<span class="string">"article"</span>,size:<span class="number">1000</span>});
{ <span class="string">"ok"</span> : <span class="number">1</span> }
&gt; db.article.<span class="keyword">insert</span>({ <span class="string">'title'</span>:<span class="string">'article title'</span>,<span class="string">'name'</span>:<span class="string">'wade'</span>, <span class="string">'time'</span>:new Date().toLocaleTimeString()})
WriteResult({ <span class="string">"nInserted"</span> : <span class="number">1</span> })
&gt; db.article.find({}).count()
<span class="number">7</span>
</code></pre><hr>
<p>reach it’s limit</p>
<blockquote>
<p>while(i&lt;100){db.article.insert({<br>    ‘title’:’article title’,’name’:’wade’, ‘time’:new Date().toLocaleTimeString()}) ; i++}<br>db.article.find({}).count()<br>    37<br>while(i&lt;1000){db.article.insert({ ‘title’:’article title’,’name’:’wade’, ‘time’:new Date().toLocaleTimeString()}) ; i++}</p>
</blockquote>
<pre><code><span class="number">999</span>
&gt; db.article.find({}).count<span class="literal">()</span>
<span class="number">37</span>
 db.article.insert({ <span class="symbol">'title'</span>:<span class="symbol">'article</span> title',<span class="symbol">'name'</span>:<span class="symbol">'wade123'</span>, <span class="symbol">'time'</span>:new <span class="type">Date</span><span class="literal">()</span>.toLocaleTimeString<span class="literal">()</span>})
</code></pre><p>WriteResult({ “nInserted” : 1 })</p>
<blockquote>
<p>db.article.find({}).sort({time:-1})<br>{ “_id” : ObjectId(“55d6092af311196af3d3c3b2”), “title” : “article title”, “name” : “wade123”, “time” : “01:06:50” }<br>{ “_id” : ObjectId(“55d60911f311196af3d3c3b1”), “title” : “article title”, “name” : “wade123”, “time” : “01:06:25” }<br>{ “_id” : ObjectId(“55d608d5f311196af3d3c395”), “title” : “article title”, “name” : “wade”, “time” : “01:05:25” }</p>
</blockquote>
<hr>
<p>结果看起来work</p>
<blockquote>
<p>db.article.find({}).count()<br>37</p>
</blockquote>
<p>16:10 - 16:40</p>
<ul>
<li><p>线下运行ok，但在线上发现，超过了大小，再也新增不了。报错：</p>
<p> { [MongoError: exception: failing update: objects in a capped ns cannot grow] …}</p>
<ul>
<li>尝试将原的size增加，看看能否插新数据，还是不行。</li>
</ul>
</li>
<li>尝试 undo  capped , stackoverflow 后发现只有rename ,and recreate data 的方法。由于创建大量数据会锁库很严重。于是紧紧rename 了这个数据库（没有旧数据关系不大，所以这么做）</li>
</ul>
<p>at last, 做完db 操作，要跑测试代码.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>将已有的集合转化为固定集合<br>    db.runCommand({convertToCapped:”test”,size:10000});</p>
<pre><code>//check
db.test.<span class="keyword">state</span]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2015/10/16/hello-world/"/>
    <id>http://yoursite.com/2015/10/16/hello-world/</id>
    <published>2015-10-15T17:53:48.000Z</published>
    <updated>2015-10-15T17:53:48.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[MMS key index]]></title>
    <link href="http://yoursite.com/2015/10/15/mms-key-index/"/>
    <id>http://yoursite.com/2015/10/15/mms-key-index/</id>
    <published>2015-10-15T05:30:26.000Z</published>
    <updated>2015-10-15T17:53:48.000Z</updated>
    <content type="html"><![CDATA[<h1 id="MMS关键指标意义&amp;各数值区间意义&amp;部署">MMS关键指标意义&amp;各数值区间意义&amp;部署</h1><h2 id="##part_1_mms图">##part 1 mms图</h2><h3 id="What’s_MMS">What’s MMS</h3><p>MongoDB Management Service (MMS) is a suite of services for managing MongoDB deployments.</p>
<h3 id="统计图表的数据来源">统计图表的数据来源</h3><p>all statistics can show in mongo shell by:</p>
<pre><code>&gt;db.<span class="function"><span class="title">serverStatus</span><span class="params">()</span></span>
</code></pre><p>### </p>
<ol>
<li>opcounters<br>意义：The average number of commands performed per second since the last data point<br>代表忙不忙，越小越好。（看业务）<br><img src="http://7xk67t.com1.z0.glb.clouddn.com/mms-opcounters.png" alt="opcounters"></li>
<li>queue</li>
</ol>
<p>意义：The number of operations queued waiting for any lock －－ 排队未执行的命令<br>越小越好，平时&lt;1<br><img src="http://7xk67t.com1.z0.glb.clouddn.com/mms-queues.png" alt="此处输入图片的描述"></p>
<ol>
<li>connection</li>
</ol>
<p>意义：The number of currently active connections to this server. A stack is allocated per connection; thus very many connections can result in significant RAM usage.<br>越小越好。<br>=client (connected) * 集群server 数目<br><img src="http://7xk67t.com1.z0.glb.clouddn.com/mms-connections.png" alt="此处输入图片的描述"></p>
<ol>
<li>lock</li>
</ol>
<p>意义：The percent of time write locked. The effective lock % is the percent of time in the global lock plus the percent of time locked by the hottest database. Because the data is sampled and combined, it is possible to see values over 100%.<br>越小越好。<br>造成锁增加的行为：update delete insert …<br><img src="http://7xk67t.com1.z0.glb.clouddn.com/mms-lock.png" alt="此处输入图片的描述"></p>
<ol>
<li>Btree</li>
</ol>
<p>意义：A large number of misses means that you are indexes are too big to fit in RAM, which can cause a significant performance penalty －－ 因为数据不再mem,从disk 加载到mem。<br>mongodb 使用 btree index<br>missratio ＝ misses/access 最好是0<br>access:  The number of times the btree indexes have been accessed.<br>hits:The number of times a btree page was in memory<br>misses: The number of times a btree page was not in memory<br>注意：不要只看一条线<br><img src="http://7xk67t.com1.z0.glb.clouddn.com/mms-btree.png" alt="此处输入图片的描述"></p>
<ol>
<li>Asserts</li>
</ol>
<p>意义：The number of regular asserts raised since this process started<br>“asserts” : {<br>        “regular” : <num>,<br>        “warning” : <num>,<br>        “msg” : <num>,<br>        “user” : <num>,<br>        “rollovers” : <num><br>},<br>不要只看一条线<br><img src="http://7xk67t.com1.z0.glb.clouddn.com/mms-asserts.png" alt="此处输入图片的描述"></num></num></num></num></num></p>
<ol>
<li>Page faults</li>
</ol>
<p>意义：The number of page faults on this process. In non-Windows environments this is hard page faults only.<br>越小越好。<br><img src="http://7xk67t.com1.z0.glb.clouddn.com/mms-pageFaults.png" alt="此处输入图片的描述"><br>  ref:<a href="http://www.cnblogs.com/no7dw/archive/2013/02/20/2918372.html" target="_blank" rel="external">link</a></p>
<h2 id="PART_2_mms-monitoring-agent_and_mms-backup-agent">PART 2 mms-monitoring-agent and mms-backup-agent</h2><p>monitoring agent: 主要用于监控db 状态</p>
<p>backup agent 主要用于备份db 到云端</p>
<p>monitoring:<br>安装：<br><a href="https://docs.cloud.mongodb.com/tutorial/install-monitoring-agent-with-deb-package/" target="_blank" rel="external">https://docs.cloud.mongodb.com/tutorial/install-monitoring-agent-with-deb-package/</a></p>
<p>如何开启／关闭</p>
<pre><code>sudo <span class="operator"><span class="keyword">start</span> mongodb-mms-<span class="keyword">monitoring</span>-<span class="keyword">agent</span>
sudo <span class="keyword">stop</span> mongodb-mms-<span class="keyword">monitoring</span>-<span class="keyword">agent</span> 
https://docs.cloud.mongodb.com/tutorial/<span class="keyword">start</span>-<span class="keyword">or</span>-<span class="keyword">stop</span>-<span class="keyword">monitoring</span>-<span class="keyword">agent</span>/</span>
</code></pre><p>backup :<br><a href="https://docs.cloud.mongodb.com/tutorial/install-backup-agent-with-deb-package/" target="_blank" rel="external">https://docs.cloud.mongodb.com/tutorial/install-backup-agent-with-deb-package/</a><br>how to start &amp; stop</p>
<pre><code>sudo <span class="operator"><span class="keyword">start</span> mongodb-mms-<span class="keyword">backup</span>-<span class="keyword">agent</span></span>
</code></pre><p>  或者：</p>
<pre><code>sudo nohup ./mongodb-mms-<span class="operator"><span class="keyword">backup</span>-<span class="keyword">agent</span> &gt;&gt; <span class="keyword">backup</span>-<span class="keyword">agent</span>.<span class="keyword">log</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span>
</code></pre><p>注意权限</p>
<p><a href="https://docs.cloud.mongodb.com/tutorial/start-or-stop-backup-agent/" target="_blank" rel="external">https://docs.cloud.mongodb.com/tutorial/start-or-stop-backup-agent/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="MMS关键指标意义&amp;各数值区间意义&amp;部署">MMS关键指标意义&amp;各数值区间意义&amp;部署</h1><h2 id="##part_1_mms图">##part 1 mms图</h2><h3 id="What’s_MMS">What’s M]]>
    </summary>
    
  </entry>
  
</feed>
